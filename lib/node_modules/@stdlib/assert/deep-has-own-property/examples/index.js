/* eslint-disable object-curly-newline */
'use strict';

var deepHasOwn = require( './../lib' );

var bool;
var has;

bool = deepHasOwn( { 'a': { 'b': { 'c': 'd' } } }, 'a.b.c' );
console.log( bool );
// => true

bool = deepHasOwn( { 'a': { 'b': { 'c': 'd' } } }, [ 'a', 'b', 'c' ] );
console.log( bool );
// => true

bool = deepHasOwn( { 'a': { 'b': { 'c': 'd' } } }, 'a/b/c', {
	'sep': '/'
});
console.log( bool );
// => true

bool = deepHasOwn( { 'a': { 'b': { 'c': 'd' } } }, 'a.b.c.d' );
console.log( bool );
// => false

bool = deepHasOwn( { 'a': [ { 'b': { 'c': 'd' } } ] }, [ 'a', '0', 'b', 'c', 'd' ] );
console.log( bool );
// => false

bool = deepHasOwn( { 'a': { 'b': { 'c': 'd' } } }, 'a/b/c/d/e', {
	'sep': '/'
});
console.log( bool );
// => false

has = deepHasOwn.factory('a_b_c', {
	'sep': '_'
});

bool = has( { 'a': { 'b': { 'c': 'd' } } } );
console.log( bool );
// => true

bool = has( { 'a': [ { 'b': { 'c': 'd' } } ] } );
console.log( bool );
// => false
